# Edit the below variables and save
[run_mode]
# flag for linear or parallel processing of the raster and vector processing pipeline
do_parallel = False
# wall_time_hours and qsub_processor_options are currently hardcoded to 24 hours, at line 495 of acd_national.py
qsub_processor_options = nodes=1:ppn=16,vmem=64Gb
wall_time_hours = 24
watch_time_hours = 24
watch_period_seconds = 60
# needs to be in the format "nodes=1:ppn=16,vmem=64Gb"


[planet]
#Your API key for Planet, if you have one.
api_key=

[forest_sentinel]
# aoi_name: The name of this area of interest. No spaces.
# aoi_name=Kenya

# Acquisition dates in the form yyyymmdd
start_date=20230101
end_date=20230414

# Dates to download and preprocess for the initial cloud-free composite
composite_start=20220101
composite_end=20221231

# EPSG code for Kenya - north of equator and east of 36Â°E is EPSG:21097
# See https://epsg.io/21097 and https://spatialreference.org/ref/epsg/21097/
epsg=21097

# Cloud cover threshold for imagery to download
cloud_cover=25

# Certainty value above which a pixel is considered a cloud from sen2cor
cloud_certainty_threshold=0

# path to the trained machine learning model for land cover in Mato Grosso
model=/data/clcr/shared/IMPRESS/Ivan/kenya_national_prod/models/model_36MYE_20230505_no_haze/model_36MYE_Unoptimised_20230505_no_haze.pkl

[environment]
# pyeo_dir needs to be an absolute path
#pyeo_dir = /data/clcr/shared/IMPRESS/Ivan/pyeo/pyeo
pyeo_dir = /data/clcr/shared/IMPRESS/matt/pyeo/pyeo_production/pyeo_production

# tile_dir needs to be an absolute path
# tile_dir = /data/clcr/shared/IMPRESS/Ivan/pyeo_testing/
tile_dir = /data/clcr/shared/IMPRESS/matt/testing_tiles/
# tile_dir = /data/clcr/shared/IMPRESS/Ivan/kenya_software_testing/
# tile_dir = /data/clcr/shared/IMPRESS/Ivan/kenya_national_prod/

# Relative paths are relative to pyeo_dir/
integrated_dir = ./integrated
roi_dir = ./roi
#roi_filename = kfs_roi_combined.shp
roi_filename = kfs_roi_subset_c.shp
geometry_dir = ./geometry
log_dir = ./log
log_filename = test_acd_parallel_20230523.txt
# log_filename = test_acd_vector_main_190523.txt
credentials_path = /data/clcr/shared/IMPRESS/matt/pyeo/pyeo_production/pyeo_production/credentials/credentials.ini
#credentials_path = /data/clcr/shared/IMPRESS/Ivan/pyeo/pyeo/credentials/credentials_ir.ini
#credentials_path = /home/i/ir81/credentials/credentials_ir.ini

# conda_environment
conda_directory = /home/m/mp730/miniconda3/envs
conda_env_name = pyeo_env
# conda_env_name = pyeo_prod_0_8_0_env

# Path to the sen2cor preprocessor script, L2A_Process. Usually in the bin/ folder of your sen2cor installation.
sen2cor_path = /home/m/mp730/Downloads/Sen2Cor-02.11.00-Linux64/bin/L2A_Process

[raster_processing_parameters]
# list of strings with the band name elements of the image file names in "" string notation
band_names = ["B02", "B03", "B04", "B08"]

# file name pattern to search for when identifying band file locations in "" string notation
resolution_string = "10m"
# spatial resolution of the output raster files in metres. Can be any resolution, not just 10, 20 or 60 as in the default band resolutions of Sentinel-2
output_resolution = 10

# set buffer in number of pixels for dilating the SCL cloud mask (recommend 30 pixels of 10 m) for the change detection
buffer_size_cloud_masking = 20
# set buffer in number of pixels for dilating the SCL cloud mask (recommend 10 pixels of 10 m) for the composite building
buffer_size_cloud_masking_composite = 10

# maximum number of images to be downloaded for compositing, in order of least cloud cover
download_limit = 10
# granules below this size in MB will not be downloaded
faulty_granule_threshold = 350

# list of strings with class labels starting from class 1. Must match the trained model that was used.
class_labels = ["primary forest", "plantation forest", "bare soil", "crops", "grassland", "open water", "burn scar", "cloud", "cloud shadow", "haze", "sparse woodland", "dense woodland", "artificial"]

# find subsequent changes from any of these classes. Must match the trained model that was used.
change_from_classes = [1, 2]

# to any of these classes. Must match the trained model that was used.
change_to_classes = [3]

# if sieve is 0, no sieve is applied. If >0, the classification images will be sieved using gdal and all contiguous groups of pixels smaller than this number will be eliminated
sieve = 0

do_raster = True
chunks = 10
download_source = "scihub"
do_all = False
do_build_composite = True
do_download = False
do_build_prob_image = False 
# do_build_prob_image, consider removing
do_classify = False
do_change = False
do_dev = True
# do_dev, consider removing
do_update = False
# do_update, consider removing
do_quicklooks = True
do_delete = False
do_zip = False
# do_zip, consider removing
do_skip_existing = False

[vector_processing_parameters]
level_1_filename = gadm41_KEN_1.json
# vectorisation currently hardcoded to use level_1_filename
level_2_filename = gadm41_KEN_2.json
level_3_filename = gadm41_KEN_3.json

do_delete_existing_vector = True
do_vectorise = False
do_integrate = False

do_filter = False
# if there are any string within counties_of_interest, filtering by county will be attempted
counties_of_interest = []
#counties_of_interest = ["Kwale", "TransNzoia"]
minimum_area_to_report_m2 = 120

do_distribution = False

######## pre-built pyeo recipes

# for example, this combination will run the whole pyeo raster pipeline
