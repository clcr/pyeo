# Edit the variables below and save before running the pipeline
[run_mode]
# flag for linear or parallel processing of the raster and vector processing pipeline
do_parallel = False
# wall_time_hours and qsub_processor_options are currently hardcoded to 24 hours, at line 495 of acd_national.py
qsub_processor_options = nodes=1:ppn=16,vmem=64Gb
wall_time_hours = 3
watch_time_hours = 3
watch_period_seconds = 60
# needs to be in the format "nodes=1:ppn=16,vmem=64Gb"

[forest_sentinel]
# aoi_name: The name of this area of interest. No spaces.
# aoi_name=Kenya

# Acquisition dates in the form yyyymmdd
start_date=20230101
end_date=20230210

# Dates to download and preprocess for the initial cloud-free composite
composite_start=20220101
composite_end=20221231

# EPSG code for Kenya - north of equator and east of 36Â°E is EPSG:21097
# See https://epsg.io/21097 and https://spatialreference.org/ref/epsg/21097/
epsg=21097

# Cloud cover threshold for imagery to download
cloud_cover=25

# Certainty value above which a pixel is considered a cloud from sen2cor
cloud_certainty_threshold=0

# path to the trained machine learning model for land cover in Kenya
model= ./models/model_36MYE_Unoptimised_20230505_no_haze.pkl

[environment]
# pyeo_dir needs to be an absolute path
pyeo_dir = /home/sepal-user/20230626_pyeo_installation/pyeo
# tile_dir needs to be an absolute path
tile_dir = /home/sepal-user/20230626_pyeo_installation

# Relative paths are relative to pyeo_dir\
integrated_dir = ./integrated
roi_dir = ./roi
roi_filename = kfs_roi_subset_c.shp
geometry_dir = ./geometry
s2_tiles_filename = kenya_s2_tiles.shp
log_dir = ./log
log_filename = sepal_venv.log
credentials_path = ./credentials/credentials.ini

environment_manager = venv
# conda_environment
#conda_directory = /home/m/mp730/miniconda3
#conda_env_name = pyeo_env

# Path to the sen2cor preprocessor script, L2A_Process. Usually in the bin/ folder of your sen2cor installation.
# conda_directory = /home/m/mp730/miniconda3
# conda_env_name = pyeo_env

# Path to the sen2cor preprocessor script for atmospheric correction, L2A_Process. 
# Usually in the bin/ folder of your sen2cor installation.
# Write sen2cor_path = none to disable sen2cor and skip L1C download and processing
# sen2cor_path = none
# on Sepal, Sen2Cor is installed in:
sen2cor_path = /usr/local/lib/Sen2Cor-02.10.01-Linux64/bin/L2A_Process
# on Sepal, the GPP file resides in:
gipp_path = /etc/sen2cor/2.10/cfg/L2A_GIPP.xml

# OLD: /usr/local/lib/Sen2Cor-02.10.01-Linux64/bin/L2A_Process

[raster_processing_parameters]

# ***** STEP 1 ***** MOVE STEP 1 TO ITS OWN SECTION [] BEFORE [RASTER PROCESSING PARAMETERS] AS AN INDEPENDENT STAGE
do_tile_intersection = True
# **************************************************************************************************************************


# ***** STEP 2 SETUP GENERAL RASTER PROCESSING OPTIONS ***** 
# ***** NOTE: MOVE [forest_sentinel] OPTIONS TO APPROPRIATE SECTION BELOW ... DATE RANGES, CLOUD, ETC.***** 

do_raster = True
chunks = 10
do_skip_existing = True
do_quicklooks = True
do_delete = False
do_zip = False
# do_zip, consider removing
do_all = False
# do_dev, consider removing
do_update = False
# do_update, consider removing
do_dev = True
# **************************************************************************************************************************

# ***** STEP 3 SETUP GENERAL RASTER PROCESSING PARAMETERS ***** 
# download_source = scihub
download_source = dataspace
# granules below this size in MB will not be downloaded
faulty_granule_threshold = 350
# list of strings with the band name elements of the image file names in "" string notation
# the wavebands specified here must match those used to build the random forest model specified in the Classify section below
band_names = ["B02", "B03", "B04", "B08"]
# file name pattern to search for when identifying band file locations in "" string notation
resolution_string = "10m"
# spatial resolution of the output raster files in metres. Can be any resolution, not just 10, 20 or 60 as in the default band resolutions of Sentinel-2
output_resolution = 10
# **************************************************************************************************************************


# ***** STEP 4 DOWNLOAD REFERENCE IMAGES AND BUILD A MEDIAN COMPOSITE ***** 
do_build_composite = True
# set buffer in number of pixels for dilating the SCL cloud mask (recommend 10 pixels of 10 m) for the composite building
buffer_size_cloud_masking_composite = 10
# maximum number of images to be downloaded for compositing, in order of least cloud cover
download_limit = 5
# **************************************************************************************************************************


# ***** STEP 5: DOWNLOAD CHANGE DETECTION IMAGES FOR THE REQUIRED DATE RANGE ***** 
do_download = True
# set buffer in number of pixels for dilating the SCL cloud mask (recommend 30 pixels of 10 m) for the change detection
buffer_size_cloud_masking = 20
# **************************************************************************************************************************


# ***** STEP 6: CLASSIFIY THE COMPOSITE AND CHANGE DETECTION IMAGES ***** 
# ***** NOTE: MOVE MODEL SPECIFICATION TO THIS SECTION***** 
do_build_prob_image = False 
# do_build_prob_image, consider removing
do_classify = True
# list of strings with class labels starting from class 1. Must match the trained model that was used.
class_labels = ["primary forest", "plantation forest", "bare soil", "crops", "grassland", "open water", "burn scar", "cloud", "cloud shadow", "haze", "sparse woodland", "dense woodland", "artificial"]
# if sieve is 0, no sieve is applied. If >0, the classification images will be sieved using gdal and all contiguous groups of pixels smaller than this number will be eliminated
sieve = 0
# **************************************************************************************************************************


# ***** STEP 7: DETECT CHANGES AND BUILD RASTER REPORTS ***** 
# ***** NOTE: ADD REPORT BINARISATION PARAMETERS TO THIS SECTION MIN_DETECTION; CONSISTENCY ETC.***** 
do_change = True
# find subsequent changes from any of these classes. Must match the trained model that was used.
change_from_classes = [1, 2]
# to any of these classes. Must match the trained model that was used.
change_to_classes = [3]
# **************************************************************************************************************************


# ***** STEP 8: VECTOR ANALYSIS OF TILE RASTER REPORTS ***** 
[vector_processing_parameters]
level_1_filename = gadm41_KEN_1.json
# vectorisation currently hardcoded to use level_1_filename
level_2_filename = gadm41_KEN_2.json
level_3_filename = gadm41_KEN_3.json

do_delete_existing_vector = True
do_vectorise = True


# ***** STEP 9: INTEGRATE VECTOR ANALYSES TO NATIONAL SCOPE ***** 
do_integrate = True
# **************************************************************************************************************************


# ***** STEP 10: FILTER NATIONAL SCOPE VECTORISED FOREST ALERTS ***** 
do_filter = False
# If there are any strings within counties_of_interest list, filtering by county will be attempted
counties_of_interest = []
# Counties_of_interest = ["Kwale", "TransNzoia"]
minimum_area_to_report_m2 = 120
# **************************************************************************************************************************


# ***** STEP 11: FILTER NATIONAL SCOPE VECTORISED FOREST ALERTS ***** 
# MANUAL ASSESSMENT OF ALERTS BY KFS STAFF AND FLAGGING FOR ALERTS FOR IN-PERSON INVESTIGATION BY RANGERS
# **************************************************************************************************************************


# ***** STEP 12: AUTOMATED DISTRIBUTION OF FILTERED ALERTS BY MESSAGING (E.G. WHATSAPP) ***** 
do_distribution = False
# **************************************************************************************************************************